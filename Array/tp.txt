class Solution {
    public int coinChange(int[] coins, int amount) {
         if (amount == 0) {
            return 0;
        }
        if (coins == null || coins.length == 0 || amount < 0) {
            return -1;
        }
        int N=coins.length;
        int sum=0;
           for(int i=0;i<N;i++){
            sum=sum+coins[i];
        }
       
         int[][] t=new int[N+1][amount+1];
        for(int i=0;i<=N;i++){ t[i][0]=Integer.MAX_VALUE-1;}
            for(int i=1;i<=amount;i++){
              
                t[0][i]=0;
            }
          for(int i=1;i<=N;i++){
              for(int j=1;j<=amount;j++){
                  if(j%coins[0]==0){
                      t[i][j]=j/coins[0];
                  }else{
                      t[i][j]=Integer.MAX_VALUE-1;
                  }
              }
              
          }
        t[0][0]=0;
        for(int i=2;i<=N;i++){
            for(int j=1;j<=amount;j++){
                if(coins[i-1]<=j){
                    t[i][j]= Math.min(t[i-1][j],1+t[i][j-coins[i-1]]);
                }
                else{
                    t[i][j]=t[i-1][j];
                }
            }
        }
        return t[N][amount];
    }
}